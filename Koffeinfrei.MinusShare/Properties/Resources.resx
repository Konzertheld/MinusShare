<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InputTitleDefaultText" xml:space="preserve">
    <value>&lt;Title&gt;</value>
  </data>
  <data name="InputTitleReadonlyDefaultText" xml:space="preserve">
    <value>Untitled</value>
  </data>
  <data name="RemoveFile" xml:space="preserve">
    <value>Remove this file</value>
  </data>
  <data name="CreateGalleryFailed" xml:space="preserve">
    <value>Failed to create gallery. </value>
  </data>
  <data name="UploadFailed" xml:space="preserve">
    <value>Upload failed. </value>
  </data>
  <data name="SaveGalleryFailed" xml:space="preserve">
    <value>Failed to save gallery. </value>
  </data>
  <data name="GallerySaved" xml:space="preserve">
    <value>Gallery saved.</value>
  </data>
  <data name="UploadSuccessful" xml:space="preserve">
    <value>Upload successful. </value>
  </data>
  <data name="AllUploadSuccessful" xml:space="preserve">
    <value>All uploads complete, saving gallery...</value>
  </data>
  <data name="UploadingFile" xml:space="preserve">
    <value>Uploading file </value>
  </data>
  <data name="UploadingFiles" xml:space="preserve">
    <value>Uploading files...</value>
  </data>
  <data name="GalleryCreated" xml:space="preserve">
    <value>Gallery created. </value>
  </data>
  <data name="TooltipCancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="TooltipCopyEditToClipboard" xml:space="preserve">
    <value>Copy editor link to clipboard</value>
  </data>
  <data name="TooltipCopyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
  <data name="TooltipEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="TooltipFacebook" xml:space="preserve">
    <value>Share on facebook</value>
  </data>
  <data name="TooltipIdentica" xml:space="preserve">
    <value>Post on identi.ca</value>
  </data>
  <data name="TooltipStartButton" xml:space="preserve">
    <value>Start sharing</value>
  </data>
  <data name="TooltipTwitter" xml:space="preserve">
    <value>Tweet it</value>
  </data>
  <data name="TooltipCheckForUpdates" xml:space="preserve">
    <value>Check for updates now</value>
  </data>
  <data name="TooltipDiscardSettingsButton" xml:space="preserve">
    <value>Discard changes</value>
  </data>
  <data name="TooltipSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="DialogVersionUpdateNoUpdates" xml:space="preserve">
    <value>You are up to date!</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>Login failed.</value>
  </data>
  <data name="LoggedIn" xml:space="preserve">
    <value>Logged In.</value>
  </data>
  <data name="LoggedInAsGuest" xml:space="preserve">
    <value>Logged In as guest.</value>
  </data>
  <data name="CheckForUpdates" xml:space="preserve">
    <value>Check for updates automatically</value>
  </data>
  <data name="DisplayFileSize" xml:space="preserve">
    <value>Display file size</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="GetGalleriesFailed" xml:space="preserve">
    <value>Getting galleries failed.</value>
  </data>
  <data name="GetGalleriesSuccessful" xml:space="preserve">
    <value>Getting galleries successful.</value>
  </data>
  <data name="HideDeletedGalleries" xml:space="preserve">
    <value>Hide deleted galleries</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>items</value>
  </data>
  <data name="Untitled" xml:space="preserve">
    <value>&lt;Untitled&gt;</value>
  </data>
  <data name="GalleriesNeedsLogin" xml:space="preserve">
    <value>You need to login in order to display your galleries.</value>
  </data>
  <data name="TooltipOpenEditLink" xml:space="preserve">
    <value>Open edit link</value>
  </data>
  <data name="TooltipOpenShareLink" xml:space="preserve">
    <value>Open share link</value>
  </data>
  <data name="LoggedInAs" xml:space="preserve">
    <value>You are logged in as</value>
  </data>
  <data name="NotLoggedIn" xml:space="preserve">
    <value>You are not logged in</value>
  </data>
  <data name="NotLoggedInInfo" xml:space="preserve">
    <value>So what?</value>
  </data>
  <data name="NotLoggedInInfoText" xml:space="preserve">
    <value>Guests cannot edit the gallery's title.
Guests cannot edit the files once uploaded.
Guest file uploads expire after 30 days.</value>
  </data>
  <data name="LoggingIn" xml:space="preserve">
    <value>Logging in...</value>
  </data>
</root>